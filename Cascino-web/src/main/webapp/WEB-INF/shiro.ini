[main]
# Create and setup user filter.
#user = com.example.filter.FacesAjaxAwareUserFilter
user.loginUrl = /login.xhtml

# Create JDBC realm.
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

# Configure JDBC realm datasource.
#dataSource = org.postgresql.ds.PGSimpleDataSource
#dataSource.URL = jdbc:postgresql://localhost:5432/cascino_db
#dataSource.user =  cascino_user_db
#dataSource.password = cascino
#dataSource.databaseName = cascino_db
#dataSource.serverName = localhost
#dataSource.portNumber = 5432

dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = java:jboss/datasources/PostgresqlDS
dataSource.requiredType = javax.sql.DataSource

jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.dataSource = $dataSource

#jdbcRealm.saltStyle  = realm.SaltStyle.CRYPT
#securityManager.realms = $jdbcRealm

# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = SELECT password FROM users where login = ? and stato = 'ok'
jdbcRealm.userRolesQuery = SELECT role FROM usersroles where "user" = (SELECT id FROM users WHERE login = ?)
jdbcRealm.permissionsQuery = SELECT azione FROM userspermissions WHERE role = (SELECT id FROM usersroles WHERE role = ?)

# Configure JDBC realm password hashing.
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.hashIterations=1
jdbcRealm.credentialsMatcher = $credentialsMatcher

[urls]
/login.xhtml = user
/app/** = user
/logout = logout



